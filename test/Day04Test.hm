module Day04Test where

import Prelude

import Test.QuickCheck (TestGroup(..), TestResult, quickCheck1)

import Day04 as D04

shouldBe :: ([D04.Passport] -> Integer) -> [D04.Passport] -> Integer -> Integer -> Boolean
shouldBe f ps n _ = f ps == n

test :: TestGroup (Integer -> IO TestResult)
test = TxG "Day04" [
    TxG "Part1" [
        Exe [
            quickCheck1 "shouldBe 2" (shouldBe D04.part1 (D04.input "./input/Day04p1test.txt") 2),
            quickCheck1 "shouldBe 202" (shouldBe D04.part1 (D04.input "./input/Day04p1.txt") 202)
        ]
    ],
    TxG "Part2" [ 
        Exe [
            quickCheck1 "shouldBe 4" (shouldBe D04.part2 (D04.input "./input/Day04p2valid.txt") 4),
            quickCheck1 "shouldBe 0" (shouldBe D04.part2 (D04.input "./input/Day04p2invalid.txt") 0),
            quickCheck1 "shouldBe 137" (shouldBe D04.part2 (D04.input "./input/Day04p1.txt") 137)
        ]
    ]
]
