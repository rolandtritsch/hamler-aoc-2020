module Test where

import Prelude

import Day00 as D00
import Day01 as D01
import Day02 as D02

import Test.QuickCheck (TestGroup(..), TestResult, quickCheck1, runTest)

test :: TestGroup (Integer -> IO TestResult)
test = TxG "AoC" [
    TxG "Day00" [
        TxG "Part1" [
            Exe [
                quickCheck1 "shouldBe right" (D00.shouldBe D00.part1 "Day00: Solution Part 1")
            ]
         ],
         TxG "Part2" [ 
            Exe [
                quickCheck1 "shouldBe right" (D00.shouldBe D00.part2 "Day00: Solution Part 2")
            ]
        ]
    ],
    TxG "Day01" [
        TxG "Part1" [
            Exe [
                quickCheck1 "shouldBe 514579" (D01.shouldBe D01.part1 (D01.input "./input/Day01p1test.txt") 514579),
                quickCheck1 "shouldBe 858496" (D01.shouldBe D01.part1 (D01.input "./input/Day01p1.txt") 858496)
            ]
         ],
         TxG "Part2" [ 
            Exe [
                quickCheck1 "shouldBe 241861950" (D01.shouldBe D01.part2 (D01.input "./input/Day01p1test.txt") 241861950),
                quickCheck1 "shouldBe 263819430"(D01.shouldBe D01.part2 (D01.input "./input/Day01p1.txt") 263819430)
            ]
        ]
    ],
    TxG "Day02" [
        TxG "Part1" [
            Exe [
                quickCheck1 "shouldBe 2" (D02.shouldBe D02.part1 (D02.input "./input/Day02p1test.txt") 2),
                quickCheck1 "shouldBe 666" (D02.shouldBe D02.part1 (D02.input "./input/Day02p1.txt") 666)
            ]
         ],
         TxG "Part2" [ 
            Exe [
                quickCheck1 "shouldBe 1" (D02.shouldBe D02.part2 (D02.input "./input/Day02p1test.txt") 1),
                quickCheck1 "shouldBe 670" (D02.shouldBe D02.part2 (D02.input "./input/Day02p1.txt") 670)
            ]
        ]
    ]    
]

main :: IO ()
main = runTest $ test

