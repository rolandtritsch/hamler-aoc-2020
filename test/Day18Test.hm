module Day18Test where

import Prelude

import Test.QuickCheck (TestGroup(..), TestResult, quickCheck1)

import Day18 as D18

shouldBe :: ([D18.Expression] -> Integer) -> [D18.Expression] -> Integer -> Integer -> Boolean
shouldBe f is n _ = f is == n

test :: TestGroup (Integer -> IO TestResult)
test = TxG "Day18" [
    TxG "Part1" [
        Exe [
            quickCheck1 "shouldBe 26457" (shouldBe D18.part1 (D18.input "./input/Day18p1test.txt") (71+51+26+437+12240+13632)),
            quickCheck1 "shouldBe 209335026987" (shouldBe D18.part1 (D18.input "./input/Day18p1.txt") 209335026987)
        ]
    ],
    TxG "Part2" [ 
        Exe [
            quickCheck1 "shouldBe 5" (shouldBe D18.part2 (D18.input "./input/Day18p1.txt") 5)
        ]
    ]
]
