module Day05Test where

import Prelude

import Test.QuickCheck (TestGroup(..), TestResult, quickCheck1)

import Day05 as D05

shouldBe :: ([D05.BoardingPass] -> Integer) -> [D05.BoardingPass] -> Integer -> Integer -> Boolean
shouldBe f is n _ = f is == n

test :: TestGroup (Integer -> IO TestResult)
test = TxG "Day05" [
    TxG "Part1" [
        Exe [
            quickCheck1 "shouldBe 820" (shouldBe D05.part1 (D05.input "./input/Day05p1test.txt") 820),
            quickCheck1 "shouldBe 989" (shouldBe D05.part1 (D05.input "./input/Day05p1.txt") 989)
        ]
    ],
    TxG "Part2" [ 
        Exe [
             quickCheck1 "shouldBe 548" (shouldBe D05.part2 (D05.input "./input/Day05p1.txt") 548)
        ]
    ]
]
