module Day10Test where

import Prelude

import Test.QuickCheck (TestGroup(..), TestResult, quickCheck1)

import Day10 as D10

shouldBe :: ([D10.Jolt] -> Integer) -> [D10.Jolt] -> Integer -> Integer -> Boolean
shouldBe f is n _ = f is == n

test :: TestGroup (Integer -> IO TestResult)
test = TxG "Day10" [
    TxG "Part1" [
        Exe [
            quickCheck1 "shouldBe 35" (shouldBe D10.part1 (D10.input "./input/Day10p1test.txt") 35),
            quickCheck1 "shouldBe 220" (shouldBe D10.part1 (D10.input "./input/Day10p1test2.txt") 220),
            quickCheck1 "shouldBe 15" (shouldBe D10.part1 (D10.input "./input/Day10p1.txt") 15)
        ]
    ],
    TxG "Part2" [ 
        Exe [
            quickCheck1 "shouldBe 108" (shouldBe D10.part2 (D10.input "./input/Day10p1.txt") 108)
        ]
    ]
]
