#!/bin/bash

cat <<EOF
{-
Do not edit this file. Instead edit ../scripts/genMain.sh and regenerate it.
-}
module Main where

import Prelude

import System.OS (systemTimeIn)
import Data.Time (TimeUnit(..))
import Data.Int (toFloat)

EOF

for d in $(seq -f '%02g' 0 25); do
  cat <<EOF 
import Day${d} as D${d}
EOF
done

cat <<EOF

main :: IO ()
main = do
EOF

for d in $(seq -f '%02g' 0 25); do
  cat <<EOF
    start${d}p1 <- systemTimeIn Microsecond
    let result${d}p1 = D${d}.part1 $ D${d}.input "./input/Day${d}p1.txt"
    printf "Force eval Day${d}: Part1 (%d)" result${d}p1 
    end${d}p1 <- systemTimeIn Microsecond
    let time${d}p1 = (toFloat (end${d}p1 - start${d}p1)) / 1000000.0
    printf "Day${d}: Part1 (%d, %2.6f)" result${d}p1 time${d}p1 

    {-
    start${d}p2 <- systemTimeIn Microsecond
    let result${d}p2 = D${d}.part2 $ D${d}.input "./input/Day${d}p1.txt"
    printf "Force eval Day${d}: Part2 (%d)" result${d}p2 
    end${d}p2 <- systemTimeIn Microsecond
    let time${d}p2 = (toFloat (end${d}p2 - start${d}p2)) / 1000000.0
    printf "Day${d}: Part2 (%d, %2.6f)" result${d}p2 time${d}p2 
    -}

EOF
done
