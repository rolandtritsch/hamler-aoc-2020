module Main where

import Prelude

import System.OS (systemTimeIn)
import Data.Time (TimeUnit(..))
import Data.Int (toFloat)

import Day21 as D21

main :: IO ()
main = do
    start21p1 <- systemTimeIn Microsecond
    let result21p1 = D21.part1 $ D21.input "./input/Day21p1.txt"
    printf "Force eval Day21: Part1 (%d)" result21p1 
    end21p1 <- systemTimeIn Microsecond
    let time21p1 = (toFloat (end21p1 - start21p1)) / 1000000.0
    printf "Day21: Part1 (%d, %2.6f)" result21p1 time21p1 

    start21p1' <- systemTimeIn Microsecond
    let result21p1' = D21.part1' $ D21.input "./input/Day21p1.txt"
    printf "Force eval Day21: Part1 (%d)" result21p1' 
    end21p1' <- systemTimeIn Microsecond
    let time21p1' = (toFloat (end21p1' - start21p1')) / 1000000.0
    printf "Day21: Part1 (%d, %2.6f)" result21p1' time21p1'

    start21p1'' <- systemTimeIn Microsecond
    let result21p1'' = D21.part1'' $ D21.input "./input/Day21p1.txt"
    printf "Force eval Day21: Part1 (%d)" result21p1'' 
    end21p1'' <- systemTimeIn Microsecond
    let time21p1'' = (toFloat (end21p1'' - start21p1'')) / 1000000.0
    printf "Day21: Part1 (%d, %2.6f)" result21p1'' time21p1'' 

