{-|
Problem: <https://adventofcode.com/2020/day/6>

Solution:

General - Count problem. Counting number of yeses per group.

Part 1 - Sum up the groups.

Part 2 - ???
-}
module Day06 where

import Prelude

import Data.List (sum, nub)
import Data.String (split, join)
import Data.Binary (toStr)

type Group = [String]

input :: String -> [Group]
input filename = groups where
    contents = toStr $ unsafePerformIO $ readFile filename
    groups = map makeGroup $ split contents "\n\n" where
        makeGroup g = split g "\n"
        
part1 :: [Group] -> Integer
part1 gs = sum yeses where
    yeses = map countYes gs where
        countYes g = length $ nub $ map (\c -> c) $ join g ""

part2 :: [Group] -> Integer
part2 gs = length gs 
